db: object to represent the database.

handleInput(cmd: String): takes user input from terminal and handles commands. Throw errors if inputs are invalid.

setKeyValues(key: String, val: String): function to handle SET commands. Creates a new object of type key in the data.

getKeyValue(key: String): function to handle GET commmands. Returns the value stored at [key]. If [key] does not exist, throws an error.

sAdd(key: String, val: String[]): function to handle SADD commands. Add all values in [val] to [key].

sRem(key: String, val: String[]): function to handle SREM commands. If key does not exists, throws an error. Otherwise, remove values indicated in [val] from [key].

sInter(keyList: String[]): function to handle SINTER commands. Returns the intersection of keys in [keyList]. If any key does not exist, throws a new error. 

keys(): function to handle KEYS commands. Returns all the current active keys in the database.

del(key: String): function to handle DEL commands. Delete [key]. If [key] does not exist, throws a new error.

expire(key: String, expire: number): function to handle EXPIRE commands. Set key to expire in [expire] seconds. Throws error if key does not exist or if expire is not a positive integer.

ttl(key: String): function to handle TTL commands. Returns time remaining of key. Throws a new error if key does not exist. 

checkIfExpired(key): function to handle key expiration. Throws a new error if [key] does not exist. If key expiration is not set, return -2. If key expired, delete the key and return -1. Otherwise returns the time remaining of the key. 

save(): save the current state of the database into a JSON string. 

restore(): restore the database to the latest snapshot.


